文章微服务模块
可以发布文章，以及进行编辑查询删除操作；
可以对文章进行点赞；审核

为什么要用缓存？
用缓存，主要有两个用途：高性能、高并发。


高性能

假设这么个场景，你有个操作，一个请求过来，吭哧吭哧你各种乱七八糟操作 mysql，半天查出来一个结果，耗时 600ms。但是这个结果可能接下来几个小时都不会变了，或者变了也可以不用立即反馈给用户。那么此时咋办？

缓存啊，折腾 600ms 查出来的结果，扔缓存里，一个 key 对应一个 value，下次再有人查，别走 mysql 折腾 600ms 了，直接从缓存里，通过一个 key 查出来一个 value，2ms 搞定。性能提升 300 倍。

就是说对于一些需要复杂操作耗时查出来的结果，且确定后面不怎么变化，但是有很多读请求，那么结果直接放在缓存，后面直接读缓存就好。


高并发

mysql 这么重的数据库，压根儿设计不是让你玩儿高并发的，虽然也可以玩儿，但是天然支持不好。mysql 单机支撑到?2000QPS?也开始容易报警了。

所以要是你有个系统，高峰期一秒钟过来的请求有 1万，那一个 mysql 单机绝对会死掉。你这个时候就只能上缓存，把很多数据放缓存，别放 mysql。缓存功能简单，说白了就是 key-value 式操作，单机支撑的并发量轻松一秒几万十几万，支撑高并发 so easy。单机承载并发量是 mysql 单机的几十倍。

缓存是走内存的，内存天然就支撑高并发。

采用Redis
缓存处理：（比如购物车 ，用户长时间不购买即购买的可能性很小，从而换取项目的运行效率）
为了提高查询性能，采用Redis缓存解决
	a)Redis是一款开源的Key-Value缓存数据库，运行在内存中
	b)Redis是一个继memcached后的又一个第三方缓存数据库，他比memcached强大很多，支持更多的数据类型（String、list、set、sort set、hash），支持持久化，支持集群；Redis虽然支持持久化，但是他并不适合持久化的保存数据。因为他不是很稳定。但是由于他是保存在内存中，读取速度非常快，所以在项目中一般都用它作为数据库和应用程序直接的中间层来使用，已减轻数据库压力，提高运行效率。


Redis 是内存型数据库，为了保证数据在断电后不会丢失，需要将内存中的数据持久化到硬盘上。
	c)Redis的持久化方式主要有2种，RDB和AOF，RDB是一种快照方式，默认每隔5分钟创建一个快照副本，这种方式占用空间大，而且会丢失间隔时间5分钟之内的数据，但是他适合做备份，恢复时，可以根据需要恢复任意间隔时间点的数据。AOF是一种日志的持久化记录方式，每秒钟，都把redis中新增的数据记录到日志文件中，这种方式只有一个文件，占用空间少，最多丢失1秒内的数据。相对比较好，但是如果想要恢复5分钟或10分钟前某个时间点的数据，就不行了。所以实际项目中，我们一般会两种方式同时使用。如果搭建集群的话，还可以通过集群互相备份数据，只要集群不同时挂掉，单个redis就可以从集群中的其他服务器获取到最新数据。

为什么会有Redis缓存过期策略当我们在一个项目中有商品信息需要不断查询，而我们希望通过Redis缓存减少数据库压力，加快查询速度，但如果这些商品数据中有一些是偶尔才查询一次，那么当我们查询一次后可能过了很久才会有第二次第三次的查询，这样它在Redis中占着位置却没有发挥作用，是一个极大的损耗，因此我们需要一个过期策略，当这个商品一段时间没有被再次查询时，我们就将其从Redis中删除，省下空间来存放别的信息。

键的过期时间    
修改findById方法  ，设置1天的过期时间
Redis 可以为每个键设置过期时间，当键过期时，会自动删除该键。
修改删除操作 后清除缓存

SpringDataRedis 
Spring-data-redis是spring大家族的一部分，提供了在srping应用中通过简单的配置访问 redis服务，对reids底层开发包进行了高度封装，RedisTemplate 提供了redis各种操作

、事务
为了保证完整性和可扩展性，比如以后要添加批量更新功能
批量更新时都用事务，一旦出错就进行回滚处理

事务的4个特性



